/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Jframe_pkg;

import Chart.JFreeChartDemo;
import Data_pkg.*;
import Data_pkg.Mesurements.Measurement;
import Data_pkg.Mesurements.Zephyr_Mesure;
import IO_pkg.*;
import NLG_pkg.Texter;
import TSMining_pkg.Correlation.Correlation;
import edu.hawaii.jmotif.sax.SAXFactory;
import edu.hawaii.jmotif.sax.alphabet.Alphabet;
import edu.hawaii.jmotif.timeseries.Timeseries;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JTextField;

/**
 *
 * @author hadi
 */
public class JFrame extends javax.swing.JFrame {

    private File_Reader filereader;
    public Person curperson;
    public Measurement curMeasurement;
    public int curenduser;      //now 0:clinicians 1:patients           ... later should be an instance of end user class
    public int curNLGmethod;    //now 0:eventbase  1:summary  2:query   ... later should be an instance of end user class
    private static double leoss_bndwdth = 0.03;   //har chi bishtar smooth tar
    private static final int seg_max_err = 100000;
    private static int sg_mx_sg = 15;
    private static final int seg_mod = 1;
    private static final int winlen = (int) (1 * 60 * 60);
    private static final int winnext = 1; //(int) (0.05 * 60 * 60);
    private static final double bandwithcorr = 0.03;
    private static final int xdnormal = 640;
    private static final int ydnormal = 400;
    private static final int xdsmall = 480;
    private static final int ydsmall = 480;  //300;
    private static final int xdlarge = 800;
    private static final int ydlarge = 600;

    /**
     * Creates new form JFrame
     */
    public JFrame() {
        initComponents();
        curenduser = 0;
        curNLGmethod = 0;

        System.setProperty("javax.xml.parsers.DocumentBuilderFactory", "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl");
        //DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();

        jChckBx_smallchart.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jFlChsr_open = new javax.swing.JFileChooser();
        jButtnGrup_Methods = new javax.swing.ButtonGroup();
        jButtn_Enduser = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jChckbx_z_hr = new javax.swing.JCheckBox();
        jChckbx_z_ac = new javax.swing.JCheckBox();
        jChckbx_z_rp = new javax.swing.JCheckBox();
        jChckbx_z_po = new javax.swing.JCheckBox();
        jbtn_z_readdata = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLst_z_filenames = new javax.swing.JList();
        jBttn_PLA = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jBttn_leoss = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jBttn_leossPLA = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jTxtFld_leossBandwith = new javax.swing.JTextField();
        jTxtFld_segnum = new javax.swing.JTextField();
        jChckBx_smallchart = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTxtAr_NLGtext = new javax.swing.JTextArea();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jRdBttn_eventbase = new javax.swing.JRadioButton();
        jRdBttn_summarybase = new javax.swing.JRadioButton();
        jRdBttn_qureybase = new javax.swing.JRadioButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jRdButtn_Clinicians = new javax.swing.JRadioButton();
        jRdButtn_patients = new javax.swing.JRadioButton();
        jBttn_GenerateText = new javax.swing.JButton();
        jButtn_Plot = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jChckBx_IsSmooth = new javax.swing.JCheckBox();
        jButton12 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu7 = new javax.swing.JMenu();
        jMnuItm_read = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu5.setText("jMenu5");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        jTabbedPane1.setToolTipText("");

        jPanel1.setToolTipText("");

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("parameters"));

        jChckbx_z_hr.setText("Heart Rate");
        jChckbx_z_hr.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jChckbx_z_hrItemStateChanged(evt);
            }
        });
        jChckbx_z_hr.setBounds(10, 20, 105, 24);
        jLayeredPane4.add(jChckbx_z_hr, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jChckbx_z_ac.setText("Accelerometer");
        jChckbx_z_ac.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jChckbx_z_acItemStateChanged(evt);
            }
        });
        jChckbx_z_ac.setBounds(10, 110, 110, 24);
        jLayeredPane4.add(jChckbx_z_ac, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jChckbx_z_rp.setText("Respiration");
        jChckbx_z_rp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jChckbx_z_rpItemStateChanged(evt);
            }
        });
        jChckbx_z_rp.setBounds(10, 50, 108, 24);
        jLayeredPane4.add(jChckbx_z_rp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jChckbx_z_po.setText("Posture");
        jChckbx_z_po.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jChckbx_z_poItemStateChanged(evt);
            }
        });
        jChckbx_z_po.setBounds(10, 80, 110, 24);
        jLayeredPane4.add(jChckbx_z_po, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jbtn_z_readdata.setText("Read data files");
        jbtn_z_readdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_z_readdataActionPerformed(evt);
            }
        });

        jLst_z_filenames.setBorder(javax.swing.BorderFactory.createTitledBorder("Files"));
        jLst_z_filenames.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLst_z_filenames.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jLst_z_filenamesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jLst_z_filenames);

        jBttn_PLA.setText("PLA seg");
        jBttn_PLA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttn_PLAActionPerformed(evt);
            }
        });

        jButton3.setText("PAA seg");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jBttn_leoss.setText("Loess Smooth");
        jBttn_leoss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttn_leossActionPerformed(evt);
            }
        });

        jButton5.setText("Read All");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("motif?");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jBttn_leossPLA.setText("Smooth+PLA");
        jBttn_leossPLA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttn_leossPLAActionPerformed(evt);
            }
        });

        jButton8.setText("Smooth+PAA");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton13.setText("Read Sleeps");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jTxtFld_leossBandwith.setText("0.01");
        jTxtFld_leossBandwith.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFld_leossBandwithActionPerformed(evt);
            }
        });

        jTxtFld_segnum.setText("15");
        jTxtFld_segnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFld_segnumActionPerformed(evt);
            }
        });

        jChckBx_smallchart.setText("smallchart");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLayeredPane4)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jChckBx_smallchart))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jbtn_z_readdata)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton13))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jBttn_PLA, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTxtFld_segnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jBttn_leoss)
                                            .addGap(18, 18, 18)
                                            .addComponent(jTxtFld_leossBandwith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jBttn_leossPLA, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(169, 169, 169))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_z_readdata)
                    .addComponent(jButton5)
                    .addComponent(jButton13))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBttn_PLA)
                    .addComponent(jTxtFld_segnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jChckBx_smallchart, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBttn_leoss)
                    .addComponent(jTxtFld_leossBandwith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBttn_leossPLA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Zephyr Data", jPanel1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createTitledBorder("Time series data"));
        jTextArea2.setEnabled(false);
        jScrollPane3.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(178, 178, 178)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(179, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 682, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("Oxymeter Data", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 682, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Clinical Data", jPanel3);

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Plot"));

        jLayeredPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("NLG"));

        jTxtAr_NLGtext.setColumns(20);
        jTxtAr_NLGtext.setRows(5);
        jTxtAr_NLGtext.setBorder(javax.swing.BorderFactory.createTitledBorder("text"));
        jScrollPane2.setViewportView(jTxtAr_NLGtext);

        jScrollPane2.setBounds(150, 10, 620, 410);
        jLayeredPane5.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Methods"));

        jButtnGrup_Methods.add(jRdBttn_eventbase);
        jRdBttn_eventbase.setText("Event base");
        jRdBttn_eventbase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRdBttn_eventbaseItemStateChanged(evt);
            }
        });
        jRdBttn_eventbase.setBounds(10, 50, 123, 24);
        jLayeredPane3.add(jRdBttn_eventbase, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtnGrup_Methods.add(jRdBttn_summarybase);
        jRdBttn_summarybase.setText("Summary base");
        jRdBttn_summarybase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRdBttn_summarybaseItemStateChanged(evt);
            }
        });
        jRdBttn_summarybase.setBounds(10, 20, 123, 24);
        jLayeredPane3.add(jRdBttn_summarybase, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtnGrup_Methods.add(jRdBttn_qureybase);
        jRdBttn_qureybase.setText("Query base");
        jRdBttn_qureybase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRdBttn_qureybaseItemStateChanged(evt);
            }
        });
        jRdBttn_qureybase.setBounds(10, 80, 106, 24);
        jLayeredPane3.add(jRdBttn_qureybase, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane3.setBounds(10, 100, 130, 120);
        jLayeredPane5.add(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("End user"));

        jButtn_Enduser.add(jRdButtn_Clinicians);
        jRdButtn_Clinicians.setText("Clinicians");
        jRdButtn_Clinicians.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRdButtn_CliniciansItemStateChanged(evt);
            }
        });
        jRdButtn_Clinicians.setBounds(10, 20, 93, 24);
        jLayeredPane1.add(jRdButtn_Clinicians, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtn_Enduser.add(jRdButtn_patients);
        jRdButtn_patients.setText("Patients");
        jRdButtn_patients.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRdButtn_patientsItemStateChanged(evt);
            }
        });
        jRdButtn_patients.setBounds(10, 40, 87, 24);
        jLayeredPane1.add(jRdButtn_patients, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane1.setBounds(10, 20, 130, 70);
        jLayeredPane5.add(jLayeredPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jBttn_GenerateText.setText("Generate text ");
        jBttn_GenerateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttn_GenerateTextActionPerformed(evt);
            }
        });
        jBttn_GenerateText.setBounds(10, 220, 130, 29);
        jLayeredPane5.add(jBttn_GenerateText, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtn_Plot.setText("Plot data");
        jButtn_Plot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtn_PlotActionPerformed(evt);
            }
        });
        jButtn_Plot.setBounds(10, 260, 134, 29);
        jLayeredPane5.add(jButtn_Plot, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton9.setText("Plot HR-Act corr data");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Plot HR-BR corr data");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jChckBx_IsSmooth.setText("Smooth data?");

        jButton12.setText("Plot Z-norm");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton11.setText("Plot 01-norm");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jMenu7.setText("File");

        jMnuItm_read.setText("Read Data Set ");
        jMnuItm_read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMnuItm_readActionPerformed(evt);
            }
        });
        jMenu7.add(jMnuItm_read);

        jMenuBar3.add(jMenu7);

        jMenu8.setText("Edit");
        jMenuBar3.add(jMenu8);

        setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jChckBx_IsSmooth)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                        .addGap(0, 456, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jChckBx_IsSmooth)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)
                        .addGap(18, 18, 18)
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMnuItm_readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMnuItm_readActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMnuItm_readActionPerformed

    private void jbtn_z_readdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_z_readdataActionPerformed

        curperson = null;
        curMeasurement = null;

        // TODO add your handling code here:

        //Imagine all the files are for one person

        filereader = new File_Reader();
        Person prsn = filereader.Read_text_files(jFlChsr_open);

        Fill_Jfilelist(prsn.msurmntlist);

        curperson = prsn;

    }//GEN-LAST:event_jbtn_z_readdataActionPerformed

    private void jLst_z_filenamesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jLst_z_filenamesValueChanged

        /* Update Cur Measurement */
        //         Measurement o = new Zephyr_Mesure(jLst_z_filenames.getSelectedValue().toString());
        //        int indx = curperson.msurmntlist.indexOf((o.equals(o)));
        // rahe halle movaghat baraye index e file e select shode :| chun tu balayi indexof--> equals object ,,, not filenemae ...

        int indx = jLst_z_filenames.getSelectedIndex();
        curMeasurement = new Zephyr_Mesure();
        curMeasurement = curperson.msurmntlist.get(indx);

        /* fill time series data text file */
        //later

        //fill time series segment list
//        for (int i = 0; i < curMeasurement.hplist.size(); i++) {
//            if (curMeasurement.HPSelectedlist[i]) {
//                curMeasurement.hplist.get(i).FillSegmentlist();
//            }
//        }

        int x = 2;

    }//GEN-LAST:event_jLst_z_filenamesValueChanged

    private void jChckbx_z_hrItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jChckbx_z_hrItemStateChanged
        curMeasurement.HPSelectedlist[0] = jChckbx_z_hr.isSelected() ? true : false;
    }//GEN-LAST:event_jChckbx_z_hrItemStateChanged

    private void jChckbx_z_rpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jChckbx_z_rpItemStateChanged
        curMeasurement.HPSelectedlist[1] = jChckbx_z_hr.isSelected() ? true : false;
    }//GEN-LAST:event_jChckbx_z_rpItemStateChanged

    private void jChckbx_z_poItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jChckbx_z_poItemStateChanged
        curMeasurement.HPSelectedlist[2] = jChckbx_z_hr.isSelected() ? true : false;
    }//GEN-LAST:event_jChckbx_z_poItemStateChanged

    private void jChckbx_z_acItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jChckbx_z_acItemStateChanged
        curMeasurement.HPSelectedlist[3] = jChckbx_z_hr.isSelected() ? true : false;
    }//GEN-LAST:event_jChckbx_z_acItemStateChanged

    private void jRdButtn_CliniciansItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRdButtn_CliniciansItemStateChanged
        curenduser = jRdButtn_Clinicians.isSelected() ? 0 : 1;
    }//GEN-LAST:event_jRdButtn_CliniciansItemStateChanged

    private void jRdButtn_patientsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRdButtn_patientsItemStateChanged
        curenduser = jRdButtn_patients.isSelected() ? 1 : 0;
    }//GEN-LAST:event_jRdButtn_patientsItemStateChanged

    private void jRdBttn_eventbaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRdBttn_eventbaseItemStateChanged
        curNLGmethod = jRdBttn_eventbase.isSelected() ? 0 : -1;
    }//GEN-LAST:event_jRdBttn_eventbaseItemStateChanged

    private void jRdBttn_summarybaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRdBttn_summarybaseItemStateChanged
        curNLGmethod = jRdBttn_summarybase.isSelected() ? 1 : -1;
    }//GEN-LAST:event_jRdBttn_summarybaseItemStateChanged

    private void jRdBttn_qureybaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRdBttn_qureybaseItemStateChanged
        curNLGmethod = jRdBttn_qureybase.isSelected() ? 2 : -1;
    }//GEN-LAST:event_jRdBttn_qureybaseItemStateChanged

    private void jBttn_GenerateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttn_GenerateTextActionPerformed

        //compute something :D
        
//        //compute ELOSSPLA Segments
//        for (int i = 0; i < 2 /*curMeasurement.hplist.size() - 1*/; i++) {
//            if (i != 2) { // not for Posture
//                leoss_bndwdth = Double.parseDouble(this.jTxtFld_leossBandwith.getText().toString());
//                curMeasurement.hplist.get(i).leoss_bandwidth = leoss_bndwdth;
//
//                curMeasurement.hplist.get(i).seg_max_err = seg_max_err;
//                sg_mx_sg = Integer.parseInt(this.jTxtFld_segnum.getText().toString());
//                curMeasurement.hplist.get(i).seg_max_seg = sg_mx_sg;
//                curMeasurement.hplist.get(i).seg_mod = 1;
//                curMeasurement.hplist.get(i).Fill_LEOSSPLAvaluesegments();
//            }
//        }
//OR    
        
        jBttn_leossPLAActionPerformed(evt);
        
        
        jTxtAr_NLGtext.setLineWrap(true);
        jTxtAr_NLGtext.setText("");


        //global
        curMeasurement.Fill_glblmsgparams();
        //statics
        curMeasurement.Fill_hpparams_statmsgparams();

        //events
        curMeasurement.Fill_hpparams_eventmsgparams();


        Texter texter = new Texter();

        //test :)
        jTxtAr_NLGtext.append(texter.testfill());
        jTxtAr_NLGtext.append("\n");
       
        String finalstring = "";

        finalstring = texter.FillSections(curMeasurement);

        jTxtAr_NLGtext.append(finalstring);

    }//GEN-LAST:event_jBttn_GenerateTextActionPerformed

    private void jButtn_PlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtn_PlotActionPerformed

        JFreeChartDemo demo = new JFreeChartDemo("JFreeChartDemo", curMeasurement.hplist);
        demo.pack();
        demo.setLocationRelativeTo(null);
        demo.setVisible(true);

//        PanelJfreechart jpan = null;
//
//        JPanel jp = jpan.fillpanel(curMeasurement.hplist);
//
//        this.jInternalFrame1.setContentPane(jp);
//        this.jInternalFrame1.pack();
//        this.jInternalFrame1.setLocation(null);
//        this.jInternalFrame1.setVisible(true);
//        //this.jInternalFrame1.setSize(100, 100);


    }//GEN-LAST:event_jButtn_PlotActionPerformed

    private void jBttn_PLAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttn_PLAActionPerformed
        // TODO add your handling code here:

        ArrayList<Time_Series> PLAseglist = new ArrayList<>();
        int ind = 0;
        for (int i = 0; i < 2 /*curMeasurement.hplist.size() - 1*/; i++) {
            if (i != 2) { // not for Posture
                curMeasurement.hplist.get(i).seg_max_err = seg_max_err;
                sg_mx_sg = Integer.parseInt(this.jTxtFld_segnum.getText().toString());
                curMeasurement.hplist.get(i).seg_max_seg = sg_mx_sg;
                curMeasurement.hplist.get(i).seg_mod = seg_mod;
                curMeasurement.hplist.get(i).Fill_PLAvaluesegments();
                PLAseglist.add(ind++, new Time_Series(curMeasurement.hplist.get(i).ts.PLAvalues, curMeasurement.hplist.get(i).name));
            }
        }
        DrawJFreeChart(PLAseglist, "PAL");
    }//GEN-LAST:event_jBttn_PLAActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        ArrayList<Time_Series> PAAseglist = new ArrayList<>();
        for (int i = 0; i < curMeasurement.hplist.size() - 1; i++) {
            curMeasurement.hplist.get(i).seg_max_err = seg_max_err;
            curMeasurement.hplist.get(i).seg_max_seg = sg_mx_sg;
            curMeasurement.hplist.get(i).seg_mod = seg_mod;
            curMeasurement.hplist.get(i).Fill_PAAsegvalues();
            PAAseglist.add(i, new Time_Series(curMeasurement.hplist.get(i).ts.PAAsegvalues, curMeasurement.hplist.get(i).name));
        }
        DrawJFreeChart(PAAseglist, "PAA");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jBttn_leossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttn_leossActionPerformed

        ArrayList<Time_Series> LEOSSseglist = new ArrayList<>();
        int ind = 0;
        for (int i = 0; i < curMeasurement.hplist.size(); i++) {
            if (i != 2) { // not for Posture
                leoss_bndwdth = Double.parseDouble(this.jTxtFld_leossBandwith.getText().toString());
                curMeasurement.hplist.get(i).leoss_bandwidth = leoss_bndwdth;
                curMeasurement.hplist.get(i).Fill_LEOSSvalues();
                LEOSSseglist.add(ind++, new Time_Series(curMeasurement.hplist.get(i).ts.LEOSSvalues, curMeasurement.hplist.get(i).name));
            }
        }
        DrawJFreeChart(LEOSSseglist, "LEOSS");
    }//GEN-LAST:event_jBttn_leossActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        curperson = null;
        curMeasurement = null;

        //Imagine all the files are for one person

        filereader = new File_Reader();
        File folder = new File("/home/hadi/inputtext");

        Person prsn = filereader.Read_text_folder(folder);

        Fill_Jfilelist(prsn.msurmntlist);

        curperson = prsn;

    }//GEN-LAST:event_jButton5ActionPerformed
    private static final int windowSize = 10;
    private static final int alphabetSize = 4;
    private Timeseries seriesA;
    private static final double[] seriesAValues = {0.22, 0.23, 0.24, 0.50, 0.83};
    private static final long[] seriesATstamps = {22L, 23L, 24L, 50L, 83L};
    private static Alphabet normalA;

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        double[] tsData = new double[curMeasurement.hplist.get(0).ts.values.size()];
        for (int i = 0; i < curMeasurement.hplist.get(0).ts.values.size(); i++) {
            tsData[i] = curMeasurement.hplist.get(0).ts.values.get(i);
        }
        edu.hawaii.jmotif.sax.datastructures.DiscordRecords dr;
//            dr = SAXFactory.seriesDiscords(tsData, windowSize,alphabetSize);        
//        } catch (TrieException | TSException ex) {
//            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }  
        //System.out.println("test");
        try {
            //   //        MyMrMotif mymrmf = new MyMrMotif();
            //        
            //            mymrmf.findMotifs(curMeasurement, tsData);
            //      

            seriesA = new Timeseries(seriesAValues, seriesATstamps);
        } catch (edu.hawaii.jmotif.timeseries.TSException ex) {
            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        normalA = new edu.hawaii.jmotif.sax.alphabet.NormalAlphabet();
//        try {
//            String timeseriesAsax3 = SAXFactory.ts2string(seriesA, 3, normalA, 3);
//        } catch (edu.hawaii.jmotif.timeseries.TSException | CloneNotSupportedException ex) {
//            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        try {
            dr = SAXFactory.getBruteForceDiscords(tsData, 10);
        } catch (edu.hawaii.jmotif.timeseries.TSException ex) {
            Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        int c = 2;

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jBttn_leossPLAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttn_leossPLAActionPerformed

        ArrayList<Time_Series> LEOSSPLAlist = new ArrayList<>();
        int ind = 0;
        for (int i = 0; i < 2 /*curMeasurement.hplist.size() - 1*/; i++) {
            if (i != 2) { // not for Posture
                leoss_bndwdth = Double.parseDouble(this.jTxtFld_leossBandwith.getText().toString());
                curMeasurement.hplist.get(i).leoss_bandwidth = leoss_bndwdth;

                curMeasurement.hplist.get(i).seg_max_err = seg_max_err;
                sg_mx_sg = Integer.parseInt(this.jTxtFld_segnum.getText().toString());
                curMeasurement.hplist.get(i).seg_max_seg = sg_mx_sg;
                curMeasurement.hplist.get(i).seg_mod = 1;
                curMeasurement.hplist.get(i).Fill_LEOSSPLAvaluesegments();
                LEOSSPLAlist.add(ind++, new Time_Series(curMeasurement.hplist.get(i).ts.LeossPlavalues, curMeasurement.hplist.get(i).name));
                
                String loessname = "leoss-"+curMeasurement.hplist.get(i).name +"-"+ leoss_bndwdth +"-";
                curMeasurement.hplist.get(i).ts.writevalues(curMeasurement.hplist.get(i).ts.LEOSSvalues, loessname);
                
                String planame = "pla-"+curMeasurement.hplist.get(i).name +"-"+ leoss_bndwdth +"-"+ sg_mx_sg +"-";
                curMeasurement.hplist.get(i).ts.writevalues(curMeasurement.hplist.get(i).ts.LeossPlavalues, planame);
                
            }
        }

        int hb = 2;
        DrawJFreeChart(LEOSSPLAlist, "LEOSS_PLA");


    }//GEN-LAST:event_jBttn_leossPLAActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        // HR and Act

        ArrayList<Time_Series> Corrlist = new ArrayList<>();

        Correlation corr = new Correlation();

        //set params
        if (jChckBx_IsSmooth.isSelected()) {
            //smooth data
            curMeasurement.hplist.get(0).Fill_LEOSSvalues(JFrame.bandwithcorr);
            curMeasurement.hplist.get(3).Fill_LEOSSvalues(JFrame.bandwithcorr);
            corr.data1 = curMeasurement.hplist.get(0).ts.LEOSSvalues;
            corr.data2 = curMeasurement.hplist.get(3).ts.LEOSSvalues;

        } else {
            corr.data1 = curMeasurement.hplist.get(0).ts.values;
            corr.data2 = curMeasurement.hplist.get(3).ts.values;
        }

        corr.winlen = JFrame.winlen;
        corr.winnext = JFrame.winnext;

        corr.Fill_corPearsValuelist();
        //corr.Fill_corSpearValuelist();
        //corr.Fill_corKendallValuelist();

        int i = 0;
        Corrlist.add(i++, new Time_Series(corr.corPearsonvaluelist, "Prsn"));
        //Corrlist.add(i++, new Time_Series(corr.corSpearvaluelist, "Sprmn"));
        //Corrlist.add(i++, new Time_Series(corr.corKendallvaluelist, "Kndll"));

        DrawJFreeChart(Corrlist, "HR-Act Corr");

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // HR and Act

        ArrayList<Time_Series> Corrlist = new ArrayList<>();

        Correlation corr = new Correlation();
        if (jChckBx_IsSmooth.isSelected()) {
            //smooth data
            curMeasurement.hplist.get(0).Fill_LEOSSvalues(JFrame.bandwithcorr);
            curMeasurement.hplist.get(1).Fill_LEOSSvalues(JFrame.bandwithcorr);
            corr.data1 = curMeasurement.hplist.get(0).ts.LEOSSvalues;
            corr.data2 = curMeasurement.hplist.get(1).ts.LEOSSvalues;

        } else {
            corr.data1 = curMeasurement.hplist.get(0).ts.values;
            corr.data2 = curMeasurement.hplist.get(1).ts.values;
        }

        corr.winlen = JFrame.winlen;
        corr.winnext = JFrame.winnext;

        corr.Fill_corPearsValuelist();
        //corr.Fill_corSpearValuelist();
        //corr.Fill_corKendallValuelist();

        int i = 0;
        Corrlist.add(i++, new Time_Series(corr.corPearsonvaluelist, "Prsn"));
        //Corrlist.add(i++, new Time_Series(corr.corSpearvaluelist, "Sprmn"));
        //Corrlist.add(i++, new Time_Series(corr.corKendallvaluelist, "Kndll"));

        DrawJFreeChart(Corrlist, "HR-BR Corr");
    }//GEN-LAST:event_jButton10ActionPerformed

                                         

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        ArrayList<Time_Series> Justact_seglist = new ArrayList<>();
        String jcharttitle = "";

        if (jChckBx_IsSmooth.isSelected()) {

            int ind = 0;
            for (int i = 0; i < curMeasurement.hplist.size(); i++) {
                curMeasurement.hplist.get(i).leoss_bandwidth = leoss_bndwdth;
                this.curMeasurement.hplist.get(i).Fill_LEOSS01norm();
                Justact_seglist.add(ind++, new Time_Series(this.curMeasurement.hplist.get(i).ts.LEOSS01norm, curMeasurement.hplist.get(i).name));
                jcharttitle = "Leoss_01_norm";
            }
        } else {
            int ind = 0;
            for (int i = 0; i < curMeasurement.hplist.size(); i++) {
                this.curMeasurement.hplist.get(i).Fill_Norm01values();
                Justact_seglist.add(ind++, new Time_Series(this.curMeasurement.hplist.get(i).ts.Norm01values, curMeasurement.hplist.get(i).name));
                jcharttitle = "01_norm";
            }
        }

        DrawJFreeChart(Justact_seglist, jcharttitle);


    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        ArrayList<Time_Series> Justact_seglist = new ArrayList<>();
        String jcharttitle = "";

        if (jChckBx_IsSmooth.isSelected()) {

            int ind = 0;
            for (int i = 0; i < curMeasurement.hplist.size(); i++) {
                curMeasurement.hplist.get(i).leoss_bandwidth = leoss_bndwdth;
                this.curMeasurement.hplist.get(i).Fill_LEOSSZednorm();
                Justact_seglist.add(ind++, new Time_Series(this.curMeasurement.hplist.get(i).ts.LEOSSZnorm, curMeasurement.hplist.get(i).name));
                jcharttitle = "Leoss_znorm";
            }
        } else {
            int ind = 0;
            for (int i = 0; i < curMeasurement.hplist.size(); i++) {
                this.curMeasurement.hplist.get(i).Fill_NormZedvalues();
                Justact_seglist.add(ind++, new Time_Series(this.curMeasurement.hplist.get(i).ts.NormZedvalues, curMeasurement.hplist.get(i).name));
                jcharttitle = "znorm";
            }
        }
        DrawJFreeChart(Justact_seglist, jcharttitle);

    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        curperson = null;
        curMeasurement = null;

        //Imagine all the files are for one person

        filereader = new File_Reader();
        File folder = new File("/home/hadi/inputsleeptext");

        Person prsn = filereader.Read_text_folder(folder);

        Fill_Jfilelist(prsn.msurmntlist);

        curperson = prsn;
        

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTxtFld_leossBandwithActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFld_leossBandwithActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtFld_leossBandwithActionPerformed

    private void jTxtFld_segnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFld_segnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtFld_segnumActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBttn_GenerateText;
    private javax.swing.JButton jBttn_PLA;
    private javax.swing.JButton jBttn_leoss;
    private javax.swing.JButton jBttn_leossPLA;
    private javax.swing.ButtonGroup jButtnGrup_Methods;
    private javax.swing.ButtonGroup jButtn_Enduser;
    private javax.swing.JButton jButtn_Plot;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jChckBx_IsSmooth;
    private javax.swing.JCheckBox jChckBx_smallchart;
    private javax.swing.JCheckBox jChckbx_z_ac;
    private javax.swing.JCheckBox jChckbx_z_hr;
    private javax.swing.JCheckBox jChckbx_z_po;
    private javax.swing.JCheckBox jChckbx_z_rp;
    private javax.swing.JFileChooser jFlChsr_open;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JList jLst_z_filenames;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMnuItm_read;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRdBttn_eventbase;
    private javax.swing.JRadioButton jRdBttn_qureybase;
    private javax.swing.JRadioButton jRdBttn_summarybase;
    private javax.swing.JRadioButton jRdButtn_Clinicians;
    private javax.swing.JRadioButton jRdButtn_patients;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTxtAr_NLGtext;
    private javax.swing.JTextField jTxtFld_leossBandwith;
    private javax.swing.JTextField jTxtFld_segnum;
    private javax.swing.JButton jbtn_z_readdata;
    // End of variables declaration//GEN-END:variables

    private void Fill_Jfilelist(ArrayList<Measurement> msurmntlist) {

        DefaultListModel sampleModel = new DefaultListModel();

        for (int i = 0; i < msurmntlist.size(); i++) {
//            jLst_filenames.add(msurmntlist.get(j).filename, this);
            sampleModel.addElement(msurmntlist.get(i).filename);
        }

        jLst_z_filenames.setModel(sampleModel);



    }

    private void DrawJFreeChart(ArrayList<Time_Series> stlist, String chartname) {

        int xd = xdnormal, yd = ydnormal;

        if (jChckBx_smallchart.isSelected()) {
            xd = xdsmall;
            yd = ydsmall;
        }

        JFreeChartDemo demo = new JFreeChartDemo(stlist, chartname, xd, yd);
        demo.pack();
        demo.setLocationRelativeTo(null);
        demo.setVisible(true);


    }
}
